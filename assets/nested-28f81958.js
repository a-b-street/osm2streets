import{i as d,s as c,J as y,j as m,f as u,g as h,d as p}from"./@vite-plugin-wasm-pack@osm2streets-js-daf45b4e.js";(async()=>{await d();class a{constructor(t){this.map=c(t),this.map.on({click:()=>{this.resetEditView()}}),this.network=null,this.layers=[],this.currentWay=null,this.currentWaysLayer=null,this.editedWays=new Set;const e=document.getElementById("import-view");e.onclick=async()=>{if(this.map.getZoom()<15){window.alert("Zoom in more to import");return}await this.importView(e)},document.getElementById("osc").onclick=()=>{this.downloadOsc()}}resetEditView(){this.currentWay=null,this.currentWaysLayer&&this.currentWaysLayer.remove(),this.currentWaysLayer=null,document.getElementById("tags").innerHTML=""}async importView(t){this.resetEditView(),this.editedWays=new Set,document.getElementById("edits-list").innerText="0 edits";const e=app.map.getBounds(),o=`https://overpass-api.de/api/interpreter?data=${`(nwr(${`${e.getSouth()},${e.getWest()},${e.getNorth()},${e.getEast()}`}); node(w)->.x; <;); out meta;`}`;console.log(`Fetching from overpass: ${o}`),t.innerText="Downloading from Overpass...",t.disabled=!0;try{const n=await(await fetch(o)).text();t.innerText="Importing OSM data...";const i="";this.network=new y(n,i,{debug_each_step:!1,dual_carriageway_experiment:!1,cycletrack_snapping_experiment:!1,inferred_sidewalks:!1,osm2lanes:!1}),this.rerenderAll();const r=this.layers[0].getBounds();this.map.fitBounds(r,{animate:!1})}catch(n){window.alert(`Import failed: ${n}`)}finally{t.innerText="Import current view",t.disabled=!1}}rerenderAll(){for(const t of this.layers)t.remove();this.layers=[],this.layers.push(L.geoJSON(JSON.parse(this.network.toGeojsonPlain()),{style:t=>t.properties.type=="intersection"?{color:"black",fillOpacity:.7}:{fill:!1,stroke:!1}})),this.layers.push(L.geoJSON(JSON.parse(this.network.toLanePolygonsGeojson()),{style:m,onEachFeature:(t,e)=>{e.on({click:o=>{t.properties.osm_way_ids.length!=1?window.alert("This road doesn't match up with one OSM way; you can't edit it"):this.editWay(BigInt(t.properties.osm_way_ids[0])),L.DomEvent.stop(o)}})}})),this.layers.push(u(this.network.toLaneMarkingsGeojson())),this.layers.push(h(this.network.toIntersectionMarkingsGeojson()));for(const t of this.layers)t.addTo(this.map)}editWay(t){this.resetEditView(),this.currentWay=t,this.currentWaysLayer=L.geoJSON(JSON.parse(this.network.getGeometryForWay(t)),{style:s=>({stroke:!0,fill:!0,color:"red",weight:1,fillOpacity:.3}),interactive:!1}).addTo(this.map);var e=`<a href="http://openstreetmap.org/way/${t}" target="_blank">Way ${t}</a><br/>`;e+='<table><tbody id="tags-table">';const o=JSON.parse(this.network.getOsmTagsForWay(t));var n=0;for(let s in o){const l=o[s];e+=`<tr id="row-${n}">`,e+=`<td><input type="text" value="${s}"></td>`,e+=`<td><input type="text" value="${l}"></td>`,e+=`<td><button type="button" id="del-${n}">Delete</button></td>`,e+="</tr>",n++}e+="</tbody></table>",e+='<button type="button" id="add-row">Add new row</button>',e+='<button type="button" id="recalculate">Recalculate</button>';const i=document.getElementById("tags");i.innerHTML=e,document.getElementById("recalculate").onclick=()=>{this.recalculateWay()},document.getElementById("add-row").onclick=()=>{n++;const s=document.createElement("tr");s.id=`row-${n}`,s.innerHTML=`<td><input type="text"></td><td><input type="text"></td><td><button type="button" id="del-${n}">Delete</button></td>`,document.getElementById("tags-table").appendChild(s),document.getElementById(`del-${n}`).onclick=()=>{document.getElementById(`row-${n}`).remove()}};for(var r=0;r<n;r++){const s=r;document.getElementById(`del-${s}`).onclick=()=>{console.log(`lets remove row-${s}`),document.getElementById(`row-${s}`).remove()}}}recalculateWay(){const t={},e=document.getElementById("tags-table");for(var o=0,n;n=e.rows[o];o++)for(var i=null,r=0,s;s=n.cells[r];r++)s.firstChild instanceof HTMLInputElement&&(i?i&&s.firstChild.value&&(t[i]=s.firstChild.value):i=s.firstChild.value);console.log(`Recalculate with ${JSON.stringify(t)}`),this.network.overwriteOsmTagsForWay(this.currentWay,JSON.stringify(t)),this.rerenderAll(),this.editedWays.add(this.currentWay),document.getElementById("edits-list").innerText=`${this.editedWays.size} edits`}downloadOsc(){var t=`<osmChange version="0.6" generator="osm2streets">
`;t+=`<create/>
`,t+=`<modify>
`;for(const e of this.editedWays)t+=this.network.wayToXml(e),t+=`
`;t+=`</modify>
`,t+="</osmChange>",p("lane_edits.osc",t)}}window.app=new a(document.getElementById("map"))})();
